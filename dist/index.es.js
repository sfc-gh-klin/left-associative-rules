import { LRParser } from '@lezer/lr';

// This file was generated by lezer-generator. You probably shouldn't edit it.
const parser = LRParser.deserialize({
  version: 14,
  states: "!WOVQPOOOOQO'#Cc'#CcO[QPO'#C_OOQO'#Cb'#CbOdQPO'#C^QOQPOOOOQO-E6a-E6aOOQO,58y,58yOOQO-E6`-E6`",
  stateData: "l~OYOS~OSPO~OSPOTVO~OSPOWQX~O",
  goto: "mWPPX[PP`fRTOTROSQSORWSSQOSRUQ",
  nodeNames: "âš  StatementHandling Stmts AnyStmt A Smc",
  maxTerm: 10,
  skippedNodes: [0],
  repeatNodeCount: 2,
  tokenData: "!v~R[X^wpqw!]!^!l#T#U!q#y#zw$f$gw#BY#BZw$IS$I_w$I|$JOw$JT$JUw$KV$KWw&FU&FVw~|YY~X^wpqw#y#zw$f$gw#BY#BZw$IS$I_w$I|$JOw$JT$JUw$KV$KWw&FU&FVw~!qOT~~!vOS~",
  tokenizers: [0],
  topRules: {"StatementHandling":[0,1]},
  tokenPrec: 0
});
// This file was generated by lezer-generator. You probably shouldn't edit it.
const StatementHandling = 1,
  Stmts = 2,
  AnyStmt = 3,
  A = 4,
  Smc = 5;

export { A, AnyStmt, Smc, StatementHandling, Stmts, parser };
